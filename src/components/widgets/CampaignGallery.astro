---
// Define the props for the component
export interface Campaign {
  image: string;
  title: string;
  subtitle: string;
  link: string;
}

// Define the props interface
export interface Props {
  campaigns: Campaign[];
  backgroundSize?: string; // Optional prop for background size
  titleSize?: string; // Optional prop for title font size
  subtitleSize?: string; // Optional prop for subtitle font size
  buttonStyle?: string; // Optional prop for button styles
}

// Destructure the props
const { campaigns, backgroundSize = 'cover', titleSize = '2rem', subtitleSize = '1.2rem', buttonStyle = '' } = Astro.props;
---
<div class="grid gap-y-8">
  <p3 class="text-3xl md:text-5xl font-bold tracking-tighter font-heading dark:text-white text-center">CAMPAIGNS</p3>
  <section class="campana-section">
<div class="Campaign-gallery">
  <div class="Campaign-carousel">
    {campaigns.map((campaign, index) => (
      <div
        class="Campaign-slide"
        aria-hidden={index !== 0}
        style={`background-image: url(${campaign.image}); background-size: ${backgroundSize};`}
      >
        <div class="Campaign-content">
          <h2 class="Campaign-title" style={`font-size: ${titleSize};`}>{campaign.title}</h2>
          <p class="Campaign-subtitle" style={`font-size: ${subtitleSize};`}>{campaign.subtitle}</p>
          <a href={campaign.link} class="Campaign-button" style={buttonStyle}>LEARN MORE</a>
        </div>
      </div>
    ))}
  </div>
</div>
</section>
</div>

<style>
  .Campaign-gallery {
    position: relative;
    width: 100%;
    margin: 0 auto;
    overflow: hidden;
  }

  .Campaign-carousel {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }

  .Campaign-slide {
    flex: 0 0 100%;
    height: 500px;
    background-position: center;
    position: relative;
    display: none;
  }

  .Campaign-slide[aria-hidden="false"] {
    display: block;
  }

  .Campaign-content {
    position: absolute;
    bottom: 20px;
    left: 20px;
    color: white;
    background: rgba(0, 0, 0, 0.5);
    padding: 20px;
    border-radius: 8px;
    max-width: 70%;
  }

  .Campaign-button {
    display: inline-block;
    padding: 10px 20px;
    background: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 10px;
    font-size: 1.5rem;
    margin: 5px;
  }

  .Campaign-button:hover {
    background: #0056b3;
  }
</style>

<script>
  // Carousel logic
  let currentIndex = 0;
  let intervalId;

  // Function to update the active slide
  const updateCarousel = () => {
    document.querySelectorAll('.Campaign-slide').forEach((slide, index) => {
      slide.setAttribute('aria-hidden', (index !== currentIndex).toString());
    });
  };

  // Function to move to the next slide
  const nextCampaign = () => {
    const CampaignSlides = document.querySelectorAll('.Campaign-slide');
    CampaignSlides[currentIndex].setAttribute('aria-hidden', 'true');
    currentIndex = (currentIndex + 1) % CampaignSlides.length;
    CampaignSlides[currentIndex].setAttribute('aria-hidden', 'false');
  };

  // Function to start the auto-cycle
  const startAutoCycle = () => {
    intervalId = setInterval(nextCampaign, 3500);
  };

  // Function to stop the auto-cycle
  const stopAutoCycle = () => {
    clearInterval(intervalId);
  };

  // Initialize the carousel
  document.addEventListener('DOMContentLoaded', () => {
    updateCarousel();
    startAutoCycle();

    const carouselContainer = document.querySelector('.Campaign-gallery');
    if (carouselContainer) {
      carouselContainer.addEventListener('mouseenter', stopAutoCycle);
      carouselContainer.addEventListener('mouseleave', startAutoCycle);
    }
  });

  // Cleanup Campaign listeners and interval on component unmount
  document.addEventListener('astro:beforeunload', () => {
    clearInterval(intervalId);
    const carouselContainer = document.querySelector('.Campaign-gallery');
    if (carouselContainer) {
      carouselContainer.removeEventListener('mouseenter', stopAutoCycle);
      carouselContainer.removeEventListener('mouseleave', startAutoCycle);
    }
  });
</script>